;;; Automatically generated on Tue Sep 26 22:55:14 2017
;;; Invoked by YeZhao@DESKTOP-YeZhao using 25.3.1
(setq-default kill-ring '("(add-hook 'sgml-mode-hook 'zencoding-mode) ;; Auto-start on any markup modes" #("<head>" 0 1 (fontified t) 1 5 (fontified t face font-lock-function-name-face) 5 6 (fontified t)) #("</head>" 0 2 (fontified t) 2 6 (fontified t face font-lock-function-name-face) 6 7 (fontified t))))
(setq-default session-file-alist '(("~/.emacs.d/customizations/magnars/setup-html-mode.el" 2647 2648 1 nil nil 2647 (overwrite-mode)) ("e:/clojure-home/a.html" 295 295 1 nil nil 266 (overwrite-mode)) ("~/.emacs.d/init.el" 8318 8181 1 nil nil 6819 (overwrite-mode)) ("~/.emacs.d/elpa/simplezen-20130421.300/simplezen-autoloads.el" 244 nil 1 nil nil 244 (overwrite-mode)) ("~/.emacs.d/elpa/zencoding-mode-20140213.22/zencoding-mode-autoloads.el" 1408 nil 1 nil nil 1408 (overwrite-mode)) ("e:/clojure-home/a.md" 1 1 1 nil nil 1 (overwrite-mode))))
(setq-default file-name-history '("~/.emacs.d/customizations/magnars/setup-html-mode.el" "~/.emacs.d/init.el" "~/.emacs.d/bookmarks" #("e:/clojure-home/a.html" 0 22 (ivy-index 0)) "~/.emacs.d/elpa/simplezen-20130421.300/simplezen-autoloads.el" "c:/Users/YeZhao/AppData/Roaming/.emacs.d/customizations/magnars/setup-html-mode.el" "~/.emacs.d/elpa/zencoding-mode-20140213.22/zencoding-mode-autoloads.el" "c:/Users/YeZhao/AppData/Roaming/.emacs.d/init.el" #("e:/clojure-home/a.md" 0 20 (ivy-index 0)) "~/.emacs.d/README.md" "~/.emacs.d/elpa/js2-mode-20170815.1415/js2-mode-autoloads.el" "~/.emacs.d/elpa/move-text-20170908.2030/move-text-autoloads.el" "~/.emacs.d/elpa/highlight-escape-sequences-20161028.1617/highlight-escape-sequences-autoloads.el" "~/.emacs.d/elpa/htmlize-20161211.1019/htmlize-autoloads.el" "~/.emacs.d/GTD/writing.org" "~/.emacs.d/GTD/orgBoss/Site/www.site.org" "~/.emacs.d/GTD/orgBoss/Vocab/vocab.org" "~/.emacs.d/GTD/orgBoss/Someday/someday.org" "~/.emacs.d/GTD/orgBoss/Private/privnotes.org" "~/.emacs.d/GTD/orgBoss/Journal/journal.org" "~/.emacs.d/GTD/orgBoss/IDEA/idea.org" "~/.emacs.d/GTD/orgBoss/Film/film.org" "~/.emacs.d/GTD/orgBoss/Financial/finances.org" "~/.emacs.d/GTD/orgBoss/DailyReview/daily.org" "~/.emacs.d/GTD/orgBoss/Clipboard/clipboard.org" "~/.emacs.d/GTD/orgBoss/Book/book.org" "~/.emacs.d/GTD/newgtd.org" #("c:/Users/YeZhao/AppData/Roaming/.emacs.d/README.md" 0 50 (ivy-index 0)) "~/.emacs.d/customizations/ui.el" "e:/clojure-home/undead_zoobie/README.md" #("e:/clojure-home/" 0 16 (ivy-index 0)) #("c:/Users/YeZhao/AppData/Roaming/.emacs.d/CalendarDairy/" 0 55 (ivy-index 3)) "c:/Users/YeZhao/AppData/Roaming/.emacs.d/customizations/ui.el" "~/.emacs.d/elpa/dired-details+-20170903.1237/dired-details+-autoloads.el" "~/.emacs.d/elpa/dired-details-20130824.458/dired-details-autoloads.el" "~/.emacs.d/elpa/dired+-20170818.1411/dired+-autoloads.el" "e:/clojure-home/a.org" "~/.emacs.d/customizations/editing.el" "~/.emacs.d/customizations/navigation.el" "e:/.emacs.d/settings/setup-magit.el" "c:/Users/YeZhao/AppData/Roaming/.emacs.d/customizations/setup-clojure.el" "c:/Users/YeZhao/AppData/Roaming/.emacs.d/customizations/editing.el" "c:/Users/YeZhao/AppData/Roaming/.emacs.d/customizations/navigation.el" "c:/Users/YeZhao/AppData/Roaming/.emacs.d/customizations/elisp-editing.el" "c:/Users/YeZhao/AppData/Roaming/.emacs.d/customizations/setup-js.el" "c:/Users/YeZhao/AppData/Roaming/.emacs.d/customizations/shell-integration.el" #("c:/Users/YeZhao/AppData/Roaming/.emacs.d/hello.md" 0 49 (ivy-index 0)) #("e:/clojure-home/undead_zoobie/src/undead_zoobie/hello.md" 0 56 (ivy-index 0)) "~/.emacs.d/elpa/ace-jump-mode-20140616.115/ace-jump-mode-autoloads.el" #("e:/clojure-home/undead_zoobie/src/undead_zoobie/hello.clj" 0 57 (ivy-index 0)) #("e:/clojure-home/undead_zoobie/src/" 0 34 (ivy-index 0)) #("e:/clojure-home/undead_zoobie/project.clj" 0 41 (ivy-index 0)) "e:/clojure-home/undead_zoobie/src/undead_zoobie/system.clj" #("e:/clojure-home/undead_zoobie/src/undead_zoobie/system.clj" 0 58 (ivy-index 0)) #("e:/clojure-home/undead_zoobie/README.md" 0 39 (ivy-index 0)) #("e:/clojure-home/first-example/src/first_example/core.clj" 0 56 (ivy-index 0)) #("e:/clojure-home/first-example/src/first_example/fractal-tree.clj" 0 64 (ivy-index 0)) #("e:/clojure-flavored-javascript/" 0 31 (ivy-index 0)) "~/.emacs.d/elpa/paredit-menu-20160128.933/paredit-menu-autoloads.el" #("e:/clojure-home/first-example/src/first_example/a.md" 0 52 (ivy-index 0)) "~/.emacs.d/elpa/iy-go-to-char-20141029.846/iy-go-to-char-autoloads.el" #("e:/clojure-home/first-example/src/first_example/" 0 48 (ivy-index 0)) "~/.emacs.d/elpa/key-chord-20160227.438/key-chord-autoloads.el" "~/.emacs.d/elpa/string-edit-20160410.2356/string-edit-autoloads.el" #("e:/a.html" 0 9 (ivy-index 0)) "c:/Users/YeZhao/AppData/Roaming/.emacs.d/.orgConf.el" "c:/Users/YeZhao/Desktop/emacsWithRemember/org-toodledo/org-toodledo.el" "~/.emacs.d/GTD/writing.org_archive" "~/.emacs.d/elpa/flycheck-20170911.127/flycheck-autoloads.el" "c:/Users/YeZhao/AppData/Roaming/.emacs.d/customizations/perl-editing.el" "c:/Users/YeZhao/AppData/Roaming/.emacs.d/CalendarDairy/diary.org" "~/.emacs.d/CalendarDairy/diary.org" "c:/Users/YeZhao/AppData/Roaming/.emacs.d/.gitignore" "~/.emacs.d/elpa/auto-complete-20170124.1845/auto-complete-autoloads.el" "~/.emacs.d/elpa/company-20170828.414/company-autoloads.el" "~/.emacs.d/elpa/company-anaconda-20160809.705/company-anaconda-autoloads.el" "~/.emacs.d/elpa/anaconda-mode-20170405.301/anaconda-mode-autoloads.el" "~/.emacs.d/elpa/pythonic-20160221.1123/pythonic-autoloads.el" "~/.emacs.d/elpa/f-20170404.1039/f-autoloads.el" #("e:/clojure-home/first-example/" 0 30 (ivy-index 0)) #("e:/clojure-home/clojure/" 0 24 (ivy-index 3)) "~/.emacs.d/elpa/cal-china-x-20170122.1100/cal-china-x-autoloads.el" "~/.emacs.d/elpa/image+-20150707.916/image+-autoloads.el" "c:/Users/YeZhao/Desktop/emacsWithRemember/.custom.el" "c:/Users/YeZhao/tags" "c:/Users/YeZhao/Desktop/emacsWithRemember/.orgConf.el" "~/.emacs.d/diary" "c:/Users/YeZhao/Desktop/emacsWithRemember/init.el" "~/.emacs.d/GTD/myPlan/2017.09.13.muse" "~/.emacs.d/elpa/2048-game-20151026.1233/2048-game-autoloads.el" "f:/gtd/privnotes.org" "~/Ð´×÷´´Òâ.org" "~/.emacs.d/elpa/cider-20170905.1037/cider-autoloads.el"))
(setq-default search-ring '("q"))
(setq-default regexp-search-ring '("zen" "ze" "file" "rename" "move" "git" "magit" "z" "eww" "perl" "cperl" "company-mode" "sd" "df" "sdsg" "org-mode"))
(setq-default bookmark-history '("README.md" #("org-remember-last-stored<2>" 0 24 (bmkp-full-record \.\.\.)) "org-capture-last-stored" #("org-remember-last-stored" 0 24 (bmkp-full-record \.\.\.)) "core.clj" #("org-agenda learning<2>" 0 19 (bmkp-full-record \.\.\.)) #("org-agenda learning" 0 19 (bmkp-full-record \.\.\.)) #("cheinsetest<2>" 0 11 (bmkp-full-record \.\.\.)) #("cheinsetest" 0 11 (bmkp-full-record \.\.\.))))
(setq-default buffer-name-history '("writing.org" "vocab.org" "calendar.tex" "TUTORIAL.cn" "test.md"))
(setq-default cider-minibuffer-history '("hello" "bar"))
(setq-default command-history '((zencoding-mode (quote toggle)) (package-install (quote simplezen) nil) (package-install (quote zencoding-mode) nil) (expand-region-abbrevs (region-beginning) (region-end) nil) (sgml-delete-tag 1) (bookmark-jump "README.md") (package-install (quote js2-mode) nil) (package-install (quote move-text) nil) (package-install (quote highlight-escape-sequences) nil) (package-install (quote htmlize) nil) (dired "e:/clojure-home/" nil) (shell-command "dir" nil nil) (shell-command "ls" nil nil) (magit-push "develop" "origin/develop" nil) (magit-stage-file "README.md") (dired "c:/Users/YeZhao/AppData/Roaming/.emacs.d/" nil) (ace-jump-word-mode 117) (magit-status nil (quote \.\.\.)) (magit-log-all (quote \.\.\.) nil) (iy-go-to-char 1 101) (dired "c:/Users/YeZhao/AppData/Roaming/.emacs.d/customizations/" nil) (package-install (quote dired-details+) nil) (jump-to-register 65 nil) (point-to-register 65 nil) (package-install (quote dired+) nil) (dired-other-frame "e:/clojure-home/" nil)))
(setq-default counsel-M-x-history '(#("^" 0 1 (ivy-index 0)) #("^z" 0 2 (ivy-index 0)) #("^ze" 0 3 (ivy-index 0)) #("^pa" 0 3 (ivy-index 0)) #("^package" 0 8 (ivy-index 0)) #("^expan" 0 6 (ivy-index 2)) #("^sgml-de" 0 8 (ivy-index 0)) #("^pack" 0 5 (ivy-index 0)) #("^dire" 0 5 (ivy-index 0)) #("^m" 0 2 (ivy-index 0)) #("^magit-pu" 0 9 (ivy-index 0)) #("^magit-sta" 0 10 (ivy-index 0)) #("^magit-log-all" 0 14 (ivy-index 0)) #("^mag" 0 4 (ivy-index 0)) #("^dired" 0 6 (ivy-index 1)) #("^dired-mo" 0 9 (ivy-index 0)) #("^d" 0 2 (ivy-index 0)) #("package" 0 7 (ivy-index 0)) #("^magit-p" 0 8 (ivy-index 0)) #("^magit-log-re" 0 13 (ivy-index 0)) #("^magit-log-bra" 0 14 (ivy-index 0)) #("^magit-push" 0 11 (ivy-index 0)) #("^magit-status" 0 13 (ivy-index 0)) #("^magit" 0 6 (ivy-index 1)) #("^magi" 0 5 (ivy-index 0)) #("^shell" 0 6 (ivy-index 0)) #("^magit-" 0 7 (ivy-index 0)) #("^magit-stat" 0 11 (ivy-index 0)) #("^mc/" 0 4 (ivy-index 0)) #("^magit-l" 0 8 (ivy-index 0)) #("^magit-ad" 0 9 (ivy-index 1)) #("^magit-log" 0 10 (ivy-index 0))))
(setq-default counsel-describe-symbol-history '(#("^iy-go-to-char" 0 14 (ivy-index 5))))
(setq-default counsel-git-grep-cmd-history '("git --no-pager grep --full-name -n --no-color -i -e \"%s\""))
(setq-default extended-command-history '("counsel-git-grep" "counsel-find-file" "swiper" "ivy-resume" "counsel-el" "counsel-git" "counsel-ag" "ivy-mode" "package-install" "undo-tree-visualizer-mode" "visual-line-mode" "mc/edit-lines" "mc/mark-next-lines" "package-list-packages" "info" "server-start" "cider-jack-in" "cua-mode" "customize" "make-frame" "paredit-mode" "run-scheme" "package-autoremove" "bookmark-bmenu-list" "bookmark-write" "bookmark-save" "bookmark-jump" "bookmark-load"))
(setq-default hi-lock-face-history '("hi-yellow" "hi-pink" "hi-green" "hi-blue" "hi-black-b" "hi-blue-b" "hi-red-b" "hi-green-b" "hi-black-hb"))
(setq-default ido-buffer-history '("writing.org" "vocab.org" "calendar.tex" "TUTORIAL.cn" "test.md"))
(setq-default ido-file-history '("." "qd" "hello.clj" "Install.txt" "core.clj" "test.md" "hello.md" "a.org" "01-5-area-of-ring.rkt" "01-2-template-examples.rkt" "01-1-f2c.rkt"))
(setq-default ivy-history '(#("set" 0 3 (ivy-index 0)) #("ini" 0 3 (ivy-index 0)) #("simplezen" 0 9 (ivy-index 0)) #("zencod" 0 6 (ivy-index 0)) "a.html" #("js2-mo" 0 6 (ivy-index 0)) #("move-text" 0 9 (ivy-index 0)) #("highlight-es" 0 12 (ivy-index 0)) #("htmlize" 0 7 (ivy-index 1)) "*scratch*" #("sc" 0 2 (ivy-index 0)) "README.md" #("ui" 0 2 (ivy-index 0)) "test" "ui.el" #("s" 0 1 (ivy-index 0))))
(setq-default kmacro-ring '(([backspace] 0 "%d") ([134217790 2 23 31 134217788 f3] 2 "%d") ("\276" 0 "%d") ([134217790 0 70 S-backspace 2 4 backspace 67108918 16 5 32 32 25 backspace backspace backspace down down down down down down] 0 "%d") ([67108918 24 20 backspace 32 32 32 32 32 134217788] 0 "%d") ([67108918 24 20 backspace tab S-tab left left left left backspace right right right right 32 32 32] 0 "%d") ([67108919 24 20 31 f3 f3 f3 backspace backspace backspace] 12 "%d") ("" 0 "%d")))
(setq-default magit-revision-history '("origin/develop" "develop"))
(setq-default minibuffer-history '("README.md" "init.el" "http://www.baidu.com" "www.baidu.com" "hello" "http://www.scheme.com/tspl2" "java" "ivy-rich" "all-the-icons-ivy" "all-the-icons-dired" "ivy-dired-history" "ivy" "smart-mode-line" "mo-git-blame" "evil-define-key" "evil-surround" "file" "save" "Auth-source" "markdown-mode+" "src/first_example/core.clj" "first-example.core" "8" "scheme-complete" "chicken-scheme" "3" "core.clj"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default org-read-date-history '("   " "q    "))
(setq-default org-refile-history '("Tasks/TestTodo"))
(setq-default org-tags-history '("mode" "½ô¼±ÖØÒª" "@work" "laptop"))
(setq-default query-replace-history '("dgdg" "g" "fuck" "gsdg" "gdfdgg" "gsd" "hello" "foo" "file" "x" "hel"))
(setq-default read-expression-history '("w"))
(setq-default serial-name-history '("COM1"))
(setq-default serial-speed-history '("9600" "1200" "2400" "4800" "14400" "19200" "28800" "38400" "57600" "115200"))
(setq-default shell-command-history '("dir" "ls"))
(setq-default smex-history '(zencoding-mode package-install expand-region-abbrevs dired magit-push magit-status magit-log-all))
(setq-default string-rectangle-history '("this." "df gf hf hf  fg  h " "sdf dfdf gsd sgsgd " "dfsdfd  fdf  fdsf  "))
(setq-default swiper-history '(#("je" 0 2 (ivy-index 0))))
(setq-default table-capture-columns-history '(""))
(setq-default table-capture-justify-history '("left"))
(setq-default table-capture-min-cell-width-history '("5"))
(setq-default table-cell-height-history '("1"))
(setq-default table-cell-span-direction-history '("right"))
(setq-default table-cell-split-contents-to-history '("split"))
(setq-default table-cell-split-orientation-history '("horizontally"))
(setq-default table-cell-width-history '("5"))
(setq-default table-col-delim-regexp-history '(""))
(setq-default table-columns-history '("3"))
(setq-default table-insert-row-column-history '("row"))
(setq-default table-justify-history '("center"))
(setq-default table-row-delim-regexp-history '(""))
(setq-default table-rows-history '("3"))
(setq-default table-sequence-count-history '("0"))
(setq-default table-sequence-increment-history '("1"))
(setq-default table-sequence-interval-history '("1"))
(setq-default table-sequence-justify-history '("left"))
(setq-default table-sequence-string-history '("0"))
(setq-default table-source-caption-history '("Table"))
(setq-default table-source-language-history '("html"))
(setq-default table-target-history '("cell"))
(setq-default tmm--history '("h==>Help" "s==>Subdir" "i==>Immediate" "r==>Regexp" "m==>Mark" "O==>Operate" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File"))
